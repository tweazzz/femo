async function ensureUserAuthenticated() {
  let userData = localStorage.getItem('user')

  if (!userData) {
    console.warn(
      'user –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ localStorage. –ü—Ä–æ–±—É–µ–º –æ–±–Ω–æ–≤–∏—Ç—å access_token...'
    )
    const newAccessToken = await refreshAccessToken()
    console.log('–†–µ–∑—É–ª—å—Ç–∞—Ç refreshAccessToken:', newAccessToken)

    if (!newAccessToken) {
      console.warn(
        'refreshAccessToken –≤–µ—Ä–Ω—É–ª null. –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ /login.html'
      )
      window.location.href = '/index.html'
      return null
    }

    userData = localStorage.getItem('user')
    if (!userData) {
      console.warn('user –≤—Å—ë –µ—â—ë –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞. –†–µ–¥–∏—Ä–µ–∫—Ç.')
      window.location.href = '/index.html'
      return null
    }
  }

  const user = JSON.parse(userData)

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–æ–ª—å
  const role = user.profile?.role
  if (role !== 'administrator') {
    console.warn(
      `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ä–æ–ª—å—é "${role}" –Ω–µ –∏–º–µ–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —É—á–∞—Å—Ç–Ω–∏–∫–∞–º. –†–µ–¥–∏—Ä–µ–∫—Ç.`
    )
    window.location.href = '/index.html'
    return null
  }

  return user
}

// –û—Å–Ω–æ–≤–Ω–∞—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è ‚Äî —Ç–µ–ø–µ—Ä—å —É—Å—Ç–æ–π—á–∏–≤–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç
function renderUserInfo(profile) {
  // —Ä–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ–º, –µ—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–ª–∏ { profile: data }
  const p = (profile && profile.profile) ? profile.profile : (profile || {});

  const avatarEl  = document.getElementById('user-avatar');
  const nameEl    = document.getElementById('user-name');
  const roleEl    = document.getElementById('user-role');
  const welcomeEl = document.querySelector('h1.text-xl');

  if (!avatarEl || !nameEl || !roleEl || !welcomeEl) {
    // –µ—Å–ª–∏ —á–µ–≥–æ-—Ç–æ –Ω–µ—Ç –≤ DOM ‚Äî –±–µ–∑–æ–ø–∞—Å–Ω–æ –∑–∞–≤–µ—Ä—à–∞–µ–º –∏ –ª–æ–≥–∏—Ä—É–µ–º
    console.warn('renderUserInfo: –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —ç–ª–µ–º–µ–Ω—Ç—ã –≤ DOM –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è');
    return;
  }

  const imgPath = p.image || '';
  avatarEl.src = imgPath
    ? (imgPath.startsWith('http') ? imgPath : `https://portal.femo.kz${imgPath}`)
    : ''; // –µ—Å–ª–∏ –Ω–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è ‚Äî –æ—Å—Ç–∞–≤–ª—è–µ–º –ø—É—Å—Ç—ã–º (–º–æ–∂–Ω–æ –ø–æ—Å—Ç–∞–≤–∏—Ç—å placeholder)

  const fullName = p.full_name_ru || '';
  nameEl.textContent = fullName;
  const firstName = fullName.split(' ')[0] || '';
  welcomeEl.textContent = `–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, ${firstName} üëã`;

  const roleMap = { administrator: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä' };
  roleEl.textContent = roleMap[p.role] || p.role || '';
}


// –§—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –¥–µ—Ä–≥–∞–µ—Ç –ø—Ä–æ—Ñ–∏–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
async function loadAdminProfile() {
  const token = localStorage.getItem('access_token');
  if (!token) throw new Error('–¢–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω');

  const res = await authorizedFetch(
    'https://portal.femo.kz/api/users/administrator/profile/',
    { headers: { Authorization: `Bearer ${token}` } }
  );
  if (!res.ok) throw new Error(`–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è: ${res.status}`);
  return await res.json();
}

document.addEventListener('DOMContentLoaded', async () => {
  const user = await ensureUserAuthenticated()
  if (!user) return

    // 2) –ü–æ–¥—Ç—è–≥–∏–≤–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å –ø–æ API
    const profileData = await loadAdminProfile();
    // 3) –†–∏—Å—É–µ–º —à–∞–ø–∫—É
    renderUserInfo(profileData);

  try {
    await loadUserSettings();

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–º–µ–Ω—ã —è–∑—ã–∫–∞
    document.querySelectorAll('input[name="lang"]').forEach((radio) => {
      radio.addEventListener('change', () => {
        updateUserSettings({ language: radio.value });
      });
    });

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —á–µ–∫–±–æ–∫—Å–æ–≤ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    document.querySelectorAll('input[type="checkbox"]').forEach((checkbox) => {
      checkbox.addEventListener('change', () => {
        updateUserSettings(); // –æ–±–Ω–æ–≤–ª—è–µ–º –≤—Å—ë
      });
    });


      // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ "–≥–ª–∞–∑–∏–∫"
      document.querySelectorAll('.toggle-pw').forEach((btn) => {
        btn.addEventListener('click', () => {
          const targetId = btn.getAttribute('data-target');
          const input = document.getElementById(targetId);
          if (input) {
            input.type = input.type === 'password' ? 'text' : 'password';
          }
        });
      });

    setupPasswordChangeForm();


  } catch (err) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö:', err)
  }
})


async function loadUserSettings() {
  const token = localStorage.getItem('access_token');
  if (!token) return;

  try {
    const response = await authorizedFetch('https://portal.femo.kz/api/users/settings/', {
      headers: {
        Authorization: `Bearer ${token}`,
      },
    });

    if (!response.ok) throw new Error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫');

    const settings = await response.json();

    // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —è–∑—ã–∫–∞
    const langInput = document.querySelector(`input[name="lang"][value="${settings.language}"]`);
    if (langInput) langInput.checked = true;

    // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —á–µ–∫–±–æ–∫—Å–æ–≤ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    const notifyMap = {
      notify_results: '–û —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö',
      notify_tasks: '–û –∑–∞–¥–∞—á–∞—Ö',
      notify_olympiads: '–û –æ–ª–∏–º–ø–∏–∞–¥–∞—Ö',
      notify_profile: '–û –ø—Ä–æ—Ñ–∏–ª–µ',
      notify_payments: '–û —Å—Ç–∞—Ç—É—Å–µ –æ–ø–ª–∞—Ç—ã',
    };

    Object.entries(notifyMap).forEach(([key, labelText]) => {
      const label = Array.from(document.querySelectorAll('label')).find(l => l.textContent.includes(labelText));
      if (label) {
        const checkbox = label.querySelector('input[type="checkbox"]');
        if (checkbox) checkbox.checked = settings[key];
      }
    });

  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫:', error);
  }
}


async function updateUserSettings(updatedFields) {
  const token = localStorage.getItem('access_token');
  if (!token) return;

  try {
    // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ DOM
    const language = document.querySelector('input[name="lang"]:checked')?.value;

    const checkboxes = document.querySelectorAll('input[type="checkbox"]');
    const settings = {
      language,
      notify_results: false,
      notify_tasks: false,
      notify_olympiads: false,
      notify_profile: false,
      notify_payments: false,
    };

    checkboxes.forEach((checkbox) => {
      const label = checkbox.closest('label');
      if (!label) return;
      const text = label.textContent.trim();

      if (text.includes('–û —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö')) settings.notify_results = checkbox.checked;
      if (text.includes('–û –∑–∞–¥–∞—á–∞—Ö')) settings.notify_tasks = checkbox.checked;
      if (text.includes('–û –æ–ª–∏–º–ø–∏–∞–¥–∞—Ö')) settings.notify_olympiads = checkbox.checked;
      if (text.includes('–û –ø—Ä–æ—Ñ–∏–ª–µ')) settings.notify_profile = checkbox.checked;
      if (text.includes('–û —Å—Ç–∞—Ç—É—Å–µ –æ–ø–ª–∞—Ç—ã')) settings.notify_payments = checkbox.checked;
    });

    const response = await fetch('https://portal.femo.kz/api/users/settings/', {
      method: 'PATCH',
      headers: {
        'Content-Type': 'application/json',
        Authorization: `Bearer ${token}`,
      },
      body: JSON.stringify({ ...settings, ...updatedFields }),
    });

    if (!response.ok) throw new Error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫');
    console.log('‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã');
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫:', error);
  }
}


function setupPasswordChangeForm() {
  const passwordForm = document.querySelector('form');
  if (!passwordForm) return;

  passwordForm.addEventListener('submit', async (e) => {
    e.preventDefault();

    const oldPassword = document.getElementById('password1')?.value.trim();
    const newPassword = document.getElementById('password2')?.value.trim();
    const confirmPassword = document.getElementById('password3')?.value.trim();

    if (!oldPassword || !newPassword || !confirmPassword) {
      alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è');
      return;
    }

    if (newPassword !== confirmPassword) {
      alert('–ù–æ–≤—ã–π –ø–∞—Ä–æ–ª—å –∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç');
      return;
    }

    const token = localStorage.getItem('access_token');
    if (!token) {
      alert('–¢–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ–π–¥–∏—Ç–µ –∑–∞–Ω–æ–≤–æ.');
      return;
    }

    try {
      const response = await fetch('https://portal.femo.kz/api/users/settings/password/', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          Authorization: `Bearer ${token}`,
        },
        body: JSON.stringify({
          old_password: oldPassword,
          new_password: newPassword,
          confirm_password: confirmPassword,
        }),
      });

      if (!response.ok) {
        const errorData = await response.json();
        alert(`–û—à–∏–±–∫–∞: ${errorData.detail || '–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –ø–∞—Ä–æ–ª—å'}`);
        return;
      }

      alert('–ü–∞—Ä–æ–ª—å —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª—ë–Ω!');
      passwordForm.reset();
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø–∞—Ä–æ–ª—è:', error);
      alert('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø–∞—Ä–æ–ª—è');
    }
  });
}


document.addEventListener('DOMContentLoaded', async () => {
  const token = localStorage.getItem('access_token');
  if (!token) {
    alert('–¢–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ–π–¥–∏—Ç–µ –∑–∞–Ω–æ–≤–æ.');
    return;
  }

  try {
    const response = await fetch('https://portal.femo.kz/api/users/administrator/profile/', {
      headers: {
        Authorization: `Bearer ${token}`,
      },
    });
    if (!response.ok) throw new Error('–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –ø—Ä–æ—Ñ–∏–ª—è');
    const data = await response.json();

    renderUserInfo({ profile: data });
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è:', error);
  }
});
