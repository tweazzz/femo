async function ensureUserAuthenticated() {
  let userData = localStorage.getItem('user')

  if (!userData) {
    console.warn(
      'user –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ localStorage. –ü—Ä–æ–±—É–µ–º –æ–±–Ω–æ–≤–∏—Ç—å access_token...'
    )
    const newAccessToken = await refreshAccessToken()
    console.log('–†–µ–∑—É–ª—å—Ç–∞—Ç refreshAccessToken:', newAccessToken)

    if (!newAccessToken) {
      console.warn(
        'refreshAccessToken –≤–µ—Ä–Ω—É–ª null. –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ /login.html'
      )
      window.location.href = '/index.html'
      return null
    }

    userData = localStorage.getItem('user')
    if (!userData) {
      console.warn('user –≤—Å—ë –µ—â—ë –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞. –†–µ–¥–∏—Ä–µ–∫—Ç.')
      window.location.href = '/index.html'
      return null
    }
  }

  const user = JSON.parse(userData)

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–æ–ª—å
  const role = user.profile?.role
  if (role !== 'administrator') {
    console.warn(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ä–æ–ª—å—é "${role}" –Ω–µ –∏–º–µ–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –∞–¥–º–∏–Ω–∫–µ. –†–µ–¥–∏—Ä–µ–∫—Ç.`)
    window.location.href = '/index.html'
    return null
  }

  return user
}

// –û—Å–Ω–æ–≤–Ω–∞—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è
function renderUserInfo(profile) {
  const avatarEl  = document.getElementById('user-avatar');
  const nameEl    = document.getElementById('user-name');
  const roleEl    = document.getElementById('user-role');
  const welcomeEl = document.querySelector('h1.text-xl');

  const imgPath = profile.image || '';
  avatarEl.src = imgPath.startsWith('http')
    ? imgPath
    : `https://portal.gradients.academy${imgPath}`;

  nameEl.textContent    = profile.full_name_ru || '';
  const firstName       = (profile.full_name_ru || '').split(' ')[0];
  welcomeEl.textContent = `–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, ${firstName} üëã`;

  const roleMap = { administrator: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä' };
  roleEl.textContent = roleMap[profile.role] || profile.role;
}

// –§—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –¥–µ—Ä–≥–∞–µ—Ç –ø—Ä–æ—Ñ–∏–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
async function loadAdminProfile() {
  const token = localStorage.getItem('access_token');
  if (!token) throw new Error('–¢–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω');

  const res = await authorizedFetch(
    'https://portal.gradients.academy/api/users/administrator/profile/',
    { headers: { Authorization: `Bearer ${token}` } }
  );
  if (!res.ok) throw new Error(`–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è: ${res.status}`);
  return await res.json();
}

let allUsers = []
let currentFilters = {
  search: '',
  country: '',
  role: '',
  grade: '',
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
async function loadAllUsers() {
  try {
    console.log('–ó–∞–≥—Ä—É–∑–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...')

    const res = await authorizedFetch(
      'https://portal.gradients.academy/api/users/dashboard/'
    )
    if (!res.ok) {
      throw new Error(`–û—à–∏–±–∫–∞ HTTP: ${res.status} ${res.statusText}`)
    }

    const data = await res.json()
    console.log('–ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ:', data)

    if (!Array.isArray(data)) {
      throw new Error('–û–∂–∏–¥–∞–ª—Å—è –º–∞—Å—Å–∏–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π')
    }

    allUsers = data
    initFilters(allUsers)
    currentPage = 1;
    updateTotalCountAndPagination();
    applyFilters();
  } catch (err) {
    console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏:', err)
    const tbody = document.querySelector('tbody')
    tbody.innerHTML = `
      <tr>
        <td colspan="6" class="px-6 py-4 text-center text-red-500">
          ${err.message}
        </td>
      </tr>
    `
  }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ñ–∏–ª—å—Ç—Ä–æ–≤
function initFilters(users) {
  // –°—Ç—Ä–∞–Ω—ã
  const countries = [...new Set(users.map(u => u.country))].filter(Boolean)
  const countrySelect = document.querySelector('.country-filter')
  countrySelect.innerHTML = `
    <option value="">–í—Å–µ —Å—Ç—Ä–∞–Ω—ã</option>
    ${countries
       .map(c => `<option value="${c}">${c}</option>`)
       .join('')}
  `

  // –†–æ–ª–∏ (—É–∂–µ –µ—Å—Ç—å –≤ HTML)

  // –ö–ª–∞—Å—Å—ã
  const grades = [...new Set(users.map((u) => u.grade))].filter(Boolean).sort()
  const gradeSelect = document.querySelector('.grade-filter')
  gradeSelect.innerHTML = `
      <option value="">–í—Å–µ –∫–ª–∞—Å—Å—ã</option>
      ${Object.entries(classMap)
        .map(([num, name]) => `<option value="${name}">${num}</option>`)
        .join('')}
    `

  // –ù–∞–≤–µ—à–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
  document.querySelectorAll('select').forEach((select) => {
    select.addEventListener('change', () => applyFilters())
  })
}

function applyFilters() {
  // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—É—â–∏–µ —Ñ–∏–ª—å—Ç—Ä—ã
  currentFilters.search = document.querySelector('#search_by_id_or_name')
    .value.trim()
    .toLowerCase();
  currentFilters.country = document.querySelector('.country-filter').value;
  currentFilters.role    = document.querySelector('.role-filter').value;
  currentFilters.grade   = document.querySelector('.grade-filter').value;

  // –§–∏–ª—å—Ç—Ä—É–µ–º allUsers
  const filtered = allUsers.filter(user => {
    const term = currentFilters.search;
    const idStr = user.id.toString();
    const matchSearch  = user.full_name_ru.toLowerCase().includes(term) || idStr.includes(term);
    const matchCountry = !currentFilters.country || user.country === currentFilters.country;
    const matchRole    = !currentFilters.role    || user.role    === currentFilters.role;
    const matchGrade   = !currentFilters.grade   || user.grade   === currentFilters.grade;
    return matchSearch && matchCountry && matchRole && matchGrade;
  });

  // –†–µ–Ω–¥–µ—Ä–∏–º –Ω—É–∂–Ω—ã–π ¬´–∫—É—Å–æ–∫¬ª –ø–æ —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
  const start = (currentPage - 1) * pageSize;
  const pageItems = filtered.slice(start, start + pageSize);
  renderUsers(pageItems);
}

const reverseClassMap = {
  first: 1,
  second: 2,
  third: 3,
  fourth: 4,
  fifth: 5,
  sixth: 6,
  seventh: 7,
  eighth: 8,
  ninth: 9,
  tenth: 10,
  eleventh: 11,
  twelfth: 12,
}
// –û—Ç—Ä–∏—Å–æ–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
function getCountryCode(countryName) {
  const map = {
  "–ê—Ñ–≥–∞–Ω–∏—Å—Ç–∞–Ω":"AF","–ê–ª–±–∞–Ω–∏—è":"AL","–ê–ª–∂–∏—Ä":"DZ","–ê–º–µ—Ä–∏–∫–∞–Ω—Å–∫–æ–µ –°–∞–º–æ–∞":"AS","–ê–Ω–¥–æ—Ä—Ä–∞":"AD","–ê–Ω–≥–æ–ª–∞":"AO","–ê–Ω—Ç–∏–≥—É–∞ –∏ –ë–∞—Ä–±—É–¥–∞":"AG",
  "–ê—Ä–≥–µ–Ω—Ç–∏–Ω–∞":"AR","–ê—Ä–º–µ–Ω–∏—è":"AM","–ê—Ä—É–±–∞":"AW","–ê–≤—Å—Ç—Ä–∞–ª–∏—è":"AU","–ê–≤—Å—Ç—Ä–∏—è":"AT","–ê–∑–µ—Ä–±–∞–π–¥–∂–∞–Ω":"AZ","–ë–∞–≥–∞–º—ã":"BS",
  "–ë–∞—Ö—Ä–µ–π–Ω":"BH","–ë–∞–Ω–≥–ª–∞–¥–µ—à":"BD","–ë–∞—Ä–±–∞–¥–æ—Å":"BB","–ë–µ–ª–∞—Ä—É—Å—å":"BY","–ë–µ–ª–∏–∑":"BZ","–ë–µ–ª—å–≥–∏—è":"BE","–ë–µ–Ω–∏–Ω":"BJ",
  "–ë–µ—Ä–º—É–¥—ã":"BM","–ë—É—Ç–∞–Ω":"BT","–ë–æ–ª–∏–≤–∏—è":"BO","–ë–æ—Å–Ω–∏—è –∏ –ì–µ—Ä—Ü–µ–≥–æ–≤–∏–Ω–∞":"BA","–ë–æ—Ç—Å–≤–∞–Ω–∞":"BW","–ë—Ä–∞–∑–∏–ª–∏—è":"BR","–ë—Ä—É–Ω–µ–π":"BN",
  "–ë—É—Ä–∫–∏–Ω–∞-–§–∞—Å–æ":"BF","–ë—É—Ä—É–Ω–¥–∏":"BI","–ö–∞–±–æ-–í–µ—Ä–¥–µ":"CV","–ö–∞–º–±–æ–¥–∂–∞":"KH","–ö–∞–º–µ—Ä—É–Ω":"CM","–ö–∞–Ω–∞–¥–∞":"CA","–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–æ–∞—Ñ—Ä–∏–∫–∞–Ω—Å–∫–∞—è –†–µ—Å–ø—É–±–ª–∏–∫–∞":"CF",
  "–ß–∞–¥":"TD","–ß–∏–ª–∏":"CL","–ö–∏—Ç–∞–π":"CN","–ö–æ–ª—É–º–±–∏—è":"CO","–ö–æ–º–æ—Ä—ã":"KM","–ö–æ–Ω–≥–æ":"CG","–ö–æ–Ω–≥–æ (–î–†–ö)":"CD","–ö–æ—Å—Ç–∞-–†–∏–∫–∞":"CR",
  "–ö–æ—Ç‚Äë–¥‚Äô–ò–≤—É–∞—Ä":"CI","–•–æ—Ä–≤–∞—Ç–∏—è":"HR","–ö—É–±–∞":"CU","–ö–∏–ø—Ä":"CY","–ß–µ—Ö–∏—è":"CZ","–î–∞–Ω–∏—è":"DK","–î–∂–∏–±—É—Ç–∏":"DJ","–î–æ–º–∏–Ω–∏–∫–∞":"DM",
  "–î–æ–º–∏–Ω–∏–∫–∞–Ω—Å–∫–∞—è –†–µ—Å–ø—É–±–ª–∏–∫–∞":"DO","–≠–∫–≤–∞–¥–æ—Ä":"EC","–ï–≥–∏–ø–µ—Ç":"EG","–°–∞–ª—å–≤–∞–¥–æ—Ä":"SV","–≠–∫–≤–∞—Ç–æ—Ä–∏–∞–ª—å–Ω–∞—è –ì–≤–∏–Ω–µ—è":"GQ","–≠—Ä–∏—Ç—Ä–µ—è":"ER",
  "–≠—Å—Ç–æ–Ω–∏—è":"EE","–≠—Å–≤–∞—Ç–∏–Ω–∏":"SZ","–≠—Ñ–∏–æ–ø–∏—è":"ET","–§–∏–¥–∂–∏":"FJ","–§–∏–Ω–ª—è–Ω–¥–∏—è":"FI","–§—Ä–∞–Ω—Ü–∏—è":"FR","–ì–∞–±–æ–Ω":"GA","–ì–∞–º–±–∏—è":"GM",
  "–ì—Ä—É–∑–∏—è":"GE","–ì–∞–Ω–∞":"GH","–ì—Ä–µ—Ü–∏—è":"GR","–ì—Ä–µ–Ω–∞–¥–∞":"GD","–ì–≤–∞—Ç–µ–º–∞–ª–∞":"GT","–ì–≤–∏–Ω–µ—è":"GN","–ì–≤–∏–Ω–µ—è-–ë–∏—Å–∞—É":"GW","–ì–∞–π–∞–Ω–∞":"GY",
  "–ì–∞–∏—Ç–∏":"HT","–ì–æ–Ω–¥—É—Ä–∞—Å":"HN","–í–µ–Ω–≥—Ä–∏—è":"HU","–ò—Å–ª–∞–Ω–¥–∏—è":"IS","–ò–Ω–¥–∏—è":"IN","–ò–Ω–¥–æ–Ω–µ–∑–∏—è":"ID","–ò—Ä–∞–Ω":"IR","–ò—Ä–∞–∫":"IQ",
  "–ò—Ä–ª–∞–Ω–¥–∏—è":"IE","–ò–∑—Ä–∞–∏–ª—å":"IL","–ò—Ç–∞–ª–∏—è":"IT","–Ø–º–∞–π–∫–∞":"JM","–Ø–ø–æ–Ω–∏—è":"JP","–ò–æ—Ä–¥–∞–Ω–∏—è":"JO","–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω":"KZ","–ö–µ–Ω–∏—è":"KE",
  "–ö–∏—Ä–∏–±–∞—Ç–∏":"KI","–ö–∏—Ä–≥–∏–∑–∏—è":"KG","–ö—É–≤–µ–π—Ç":"KW","–õ–∞–æ—Å":"LA","–õ–∞—Ç–≤–∏—è":"LV","–õ–∏–≤–∞–Ω":"LB","–õ–µ—Å–æ—Ç–æ":"LS","–õ–∏–±–µ—Ä–∏—è":"LR",
  "–õ–∏–≤–∏—è":"LY","–õ–∏—Ç–≤–∞":"LT","–õ—é–∫—Å–µ–º–±—É—Ä–≥":"LU","–ú–∞–¥–∞–≥–∞—Å–∫–∞—Ä":"MG","–ú–∞–ª–∞–≤–∏":"MW","–ú–∞–ª–∞–π–∑–∏—è":"MY","–ú–∞–ª—å–¥–∏–≤—ã":"MV","–ú–∞–ª–∏":"ML",
  "–ú–∞–ª—å—Ç–∞":"MT","–ú–∞—Ä—à–∞–ª–ª–æ–≤—ã –û—Å—Ç—Ä–æ–≤–∞":"MH","–ú–∞–≤—Ä–∏—Ç–∞–Ω–∏—è":"MR","–ú–∞–≤—Ä–∏–∫–∏–π":"MU","–ú–µ–∫—Å–∏–∫–∞":"MX","–ú–∏–∫—Ä–æ–Ω–µ–∑–∏—è":"FM","–ú–æ–ª–¥–æ–≤–∞":"MD",
  "–ú–æ–Ω–∞–∫–æ":"MC","–ú–æ–Ω–≥–æ–ª–∏—è":"MN","–ß–µ—Ä–Ω–æ–≥–æ—Ä–∏—è":"ME","–ú–∞—Ä–æ–∫–∫–æ":"MA","–ú–æ–∑–∞–º–±–∏–∫":"MZ","–ú—å—è–Ω–º–∞":"MM","–ù–∞–º–∏–±–∏—è":"NA","–ù–∞—É—Ä—É":"NR",
  "–ù–µ–ø–∞–ª":"NP","–ù–∏–¥–µ—Ä–ª–∞–Ω–¥—ã":"NL","–ù–æ–≤–∞—è –ó–µ–ª–∞–Ω–¥–∏—è":"NZ","–ù–∏–∫–∞—Ä–∞–≥—É–∞":"NI","–ù–∏–≥–µ—Ä":"NE","–ù–∏–≥–µ—Ä–∏—è":"NG","–°–µ–≤–µ—Ä–Ω–∞—è –ö–æ—Ä–µ—è":"KP",
  "–°–µ–≤–µ—Ä–Ω–∞—è –ú–∞–∫–µ–¥–æ–Ω–∏—è":"MK","–ù–æ—Ä–≤–µ–≥–∏—è":"NO","–û–º–∞–Ω":"OM","–ü–∞–∫–∏—Å—Ç–∞–Ω":"PK","–ü–∞–ª–∞—É":"PW","–ü–∞–Ω–∞–º–∞":"PA","–ü–∞–ø—É–∞ ‚Äî –ù–æ–≤–∞—è –ì–≤–∏–Ω–µ—è":"PG",
  "–ü–∞—Ä–∞–≥–≤–∞–π":"PY","–ü–µ—Ä—É":"PE","–§–∏–ª–∏–ø–ø–∏–Ω—ã":"PH","–ü–æ–ª—å—à–∞":"PL","–ü–æ—Ä—Ç—É–≥–∞–ª–∏—è":"PT","–ö–∞—Ç–∞—Ä":"QA","–†–µ—Å–ø—É–±–ª–∏–∫–∞ –ö–æ—Ä–µ—è":"KR","–†—É–º—ã–Ω–∏—è":"RO",
  "–†–æ—Å—Å–∏—è":"RU","–†—É–∞–Ω–¥–∞":"RW","–°–∞–Ω-–ú–∞—Ä–∏–Ω–æ":"SM","–°–∞–Ω-–¢–æ–º–µ –∏ –ü—Ä–∏–Ω—Å–∏–ø–∏":"ST","–°–∞—É–¥–æ–≤—Å–∫–∞—è –ê—Ä–∞–≤–∏—è":"SA","–°–µ–Ω–µ–≥–∞–ª":"SN","–°–µ—Ä–±–∏—è":"RS",
  "–°–µ–π—à–µ–ª—ã":"SC","–°—å–µ—Ä—Ä–∞-–õ–µ–æ–Ω–µ":"SL","–°–∏–Ω–≥–∞–ø—É—Ä":"SG","–°–ª–æ–≤–∞–∫–∏—è":"SK","–°–ª–æ–≤–µ–Ω–∏—è":"SI","–°–æ–ª–æ–º–æ–Ω–æ–≤—ã –û—Å—Ç—Ä–æ–≤–∞":"SB","–°–æ–º–∞–ª–∏":"SO",
  "–Æ–∂–Ω–∞—è –ê—Ñ—Ä–∏–∫–∞":"ZA","–Æ–∂–Ω—ã–π –°—É–¥–∞–Ω":"SS","–ò—Å–ø–∞–Ω–∏—è":"ES","–®—Ä–∏-–õ–∞–Ω–∫–∞":"LK","–°—É–¥–∞–Ω":"SD","–°—É—Ä–∏–Ω–∞–º":"SR","–®–≤–µ—Ü–∏—è":"SE","–®–≤–µ–π—Ü–∞—Ä–∏—è":"CH",
  "–°–∏—Ä–∏—è":"SY","–¢–∞–¥–∂–∏–∫–∏—Å—Ç–∞–Ω":"TJ","–¢–∞–Ω–∑–∞–Ω–∏—è":"TZ","–¢–∞–∏–ª–∞–Ω–¥":"TH","–¢–æ–≥–æ":"TG","–¢–æ–Ω–≥–∞":"TO","–¢—Ä–∏–Ω–∏–¥–∞–¥ –∏ –¢–æ–±–∞–≥–æ":"TT","–¢—É–Ω–∏—Å":"TN",
  "–¢—É—Ä—Ü–∏—è":"TR","–¢—É—Ä–∫–º–µ–Ω–∏—Å—Ç–∞–Ω":"TM","–£–≥–∞–Ω–¥–∞":"UG","–£–∫—Ä–∞–∏–Ω–∞":"UA","–û–±—ä–µ–¥–∏–Ω—ë–Ω–Ω—ã–µ –ê—Ä–∞–±—Å–∫–∏–µ –≠–º–∏—Ä–∞—Ç—ã":"AE","–í–µ–ª–∏–∫–æ–±—Ä–∏—Ç–∞–Ω–∏—è":"GB","–°–®–ê":"US",
  "–£—Ä—É–≥–≤–∞–π":"UY","–£–∑–±–µ–∫–∏—Å—Ç–∞–Ω":"UZ","–í–∞–Ω—É–∞—Ç—É":"VU","–í–∞—Ç–∏–∫–∞–Ω":"VA","–í–µ–Ω–µ—Å—É—ç–ª–∞":"VE","–í—å–µ—Ç–Ω–∞–º":"VN","–ô–µ–º–µ–Ω":"YE","–ó–∞–º–±–∏—è":"ZM",
  "–ó–∏–º–±–∞–±–≤–µ":"ZW",
  }
  return map[countryName] || ''
}

function getCountryFlagImg(countryName) {
  const code = getCountryCode(countryName).toLowerCase()
  return code
    ? `<img src="https://flagcdn.com/16x12/${code}.png" alt="${countryName}" class="inline-block w-5 h-3 rounded-sm" />`
    : ''
}

function renderUsers(users) {
  const tbody = document.querySelector('tbody')
  tbody.innerHTML =
    users.length === 0
      ? `
    <tr>
      <td colspan="6" class="px-6 py-4 text-center text-gray-500">
        –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã
      </td>
    </tr>
  `
      : users
          .map((user) => {
            const roleInfo =
              user.role === 'participant'
                ? {
                    class: 'text-blue-primary',
                    label: '–£—á–∞—Å—Ç–Ω–∏–∫',
                  }
                : {
                    class: 'text-violet-primary',
                    label: '–ü—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—å',
                  }

            // üß† –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –∞–≤–∞—Ç–∞—Ä–∫–∏
            const avatar = user.image
              ? `<img src="${user.image}" alt="${user.full_name_ru}" class="h-8 w-8 rounded-full object-cover" />`
              : `<div class="h-8 w-8 rounded-full bg-gray-300"></div>`

            return `
      <tr class="hover:bg-gray-50">
        <td class="px-6 py-4 whitespace-nowrap">
          <div class="flex items-center">
            ${avatar}
            <div class="ml-4">
              <div class="text-sm font-medium text-gray-900">
                ${user.full_name_ru}
              </div>
            </div>
          </div>
        </td>
        <td class="px-6 py-4 text-sm whitespace-nowrap">${user.id}</td>
        <td class="px-6 py-4 whitespace-nowrap">
          <div class="flex items-center gap-1">
            ${getCountryFlagImg(user.country)}
            <span class="text-sm text-gray-900">${user.country}</span>
          </div>
        </td>
        <td class="px-6 py-4 whitespace-nowrap">
          <span class="${roleInfo.class} flex items-center gap-2 rounded-full px-2 py-1 text-sm font-medium">
            <span class="text-xl">‚Ä¢</span> ${roleInfo.label}
          </span>
        </td>
        <td class="px-6 py-4 text-sm whitespace-nowrap">${reverseClassMap[user.grade] || '‚Äî'}</td>
        <td class="px-6 py-4 text-sm whitespace-nowrap">
          <div class="flex justify-between gap-2 *:cursor-pointer">
            <button type="button" onclick="confirmDeleteUser(${user.id})" class="text-gray-400 hover:text-red-500">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"/>
              </svg>
            </button>
            <button type="button" onclick="openEditModal(${user.id})" class="hover:text-blue-primary text-gray-400">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z"/>
              </svg>
            </button>
          </div>
        </td>
      </tr>
    `
          })
          .join('')
}

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–ª–∞–≥–æ–≤
function getFlagEmoji(country) {
  const flags = {
    –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω: 'üá∞üáø',
    –†–æ—Å—Å–∏—è: 'üá∑üá∫',
    –£–∑–±–µ–∫–∏—Å—Ç–∞–Ω: 'üá∫üáø',
  }
  return flags[country] || ''
}

// –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π setupSearch —Å debounce
function setupSearch() {
  const searchInput = document.querySelector('#search_by_id_or_name')
  const debouncedSearch = debounce(() => applyFilters(), 500)

  searchInput.addEventListener('input', debouncedSearch)
  searchInput.addEventListener('keypress', (e) => {
    if (e.key === 'Enter') applyFilters()
  })
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
document.addEventListener('DOMContentLoaded', async () => {
  const user = await ensureUserAuthenticated()
  if (!user) return

    // 2) –ü–æ–¥—Ç—è–≥–∏–≤–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å –ø–æ API
    const profileData = await loadAdminProfile();
    // 3) –†–∏—Å—É–µ–º —à–∞–ø–∫—É
    renderUserInfo(profileData);
  setupSearch()

  await populateCountryAndClassOptions()

  try {
    await loadAllUsers()
  } catch (err) {
    console.error('–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:', err)
  }
})

// –§—É–Ω–∫—Ü–∏—è debounce
function debounce(func, delay) {
  let timeoutId
  return (...args) => {
    clearTimeout(timeoutId)
    timeoutId = setTimeout(() => func.apply(this, args), delay)
  }
}

async function downloadAllUsersExcel() {
  try {
    const token = localStorage.getItem('access_token')

    if (!token) {
      console.error('–¢–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ localStorage')
      return
    }

    const response = await fetch(
      'https://portal.gradients.academy/api/users/dashboard/export/',
      {
        method: 'GET',
        headers: {
          Authorization: `Bearer ${token}`,
        },
      }
    )

    if (!response.ok) {
      throw new Error(
        `–û—à–∏–±–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞: ${response.status} ${response.statusText}`
      )
    }

    const blob = await response.blob()
    const url = window.URL.createObjectURL(blob)

    const link = document.createElement('a')
    link.href = url
    link.download = 'users.xlsx' // –º–æ–∂–Ω–æ –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞—Ç—å –∏–º—è
    document.body.appendChild(link)
    link.click()
    link.remove()
    window.URL.revokeObjectURL(url)
  } catch (err) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ —Ñ–∞–π–ª–∞:', err)
  }
}

const pageSize = 20
let currentPage = 1
let totalUserCount = 0


function updateTotalCountAndPagination() {
  // –°—á–∏—Ç–∞–µ–º, —Å–∫–æ–ª—å–∫–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –æ—Å—Ç–∞–ª–æ—Å—å –ø–æ—Å–ª–µ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
  const totalCount = allUsers.filter(user => {
    // —Ç–∞ –∂–µ –ª–æ–≥–∏–∫–∞ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏, —á—Ç–æ –∏ –≤ applyFilters, –±–µ–∑ —Å—Ä–µ–∑–∞
    const term = currentFilters.search;
    const idStr = user.id.toString();
    return (
      (user.full_name_ru.toLowerCase().includes(term) || idStr.includes(term)) &&
      (!currentFilters.country || user.country === currentFilters.country) &&
      (!currentFilters.role    || user.role    === currentFilters.role) &&
      (!currentFilters.grade   || user.grade   === currentFilters.grade)
    );
  }).length;

  totalUserCount = totalCount;
  document.getElementById('total-users-count').textContent = totalCount;
  renderPaginationControls(totalCount);
}

function renderPaginationControls(totalCount) {
  const container = document.getElementById('pagination');
  container.innerHTML = '';
  const totalPages = Math.ceil(totalCount / pageSize);

  // –ö–Ω–æ–ø–∫–∞ ¬´‚Üê¬ª
  const prev = document.createElement('button');
  prev.innerHTML = '&larr;';
  prev.disabled = currentPage === 1;
  prev.className = 'px-3 py-1 border rounded';
  prev.onclick = () => {
    if (currentPage > 1) {
      currentPage--;
      applyFilters();
      updateTotalCountAndPagination();
    }
  };
  container.appendChild(prev);

  // –ù–æ–º–µ—Ä–∞
  for (let i = 1; i <= totalPages; i++) {
    const btn = document.createElement('button');
    btn.textContent = i;
    btn.className = `px-3 py-1 border rounded ${
      i === currentPage
        ? 'border-orange-primary text-orange-primary'
        : 'text-gray-600 hover:bg-gray-50'
    }`;
    btn.onclick = () => {
      currentPage = i;
      applyFilters();
      updateTotalCountAndPagination();
    };
    container.appendChild(btn);
  }

  // –ö–Ω–æ–ø–∫–∞ ¬´‚Üí¬ª
  const next = document.createElement('button');
  next.innerHTML = '&rarr;';
  next.disabled = currentPage === totalPages || totalPages === 0;
  next.className = 'px-3 py-1 border rounded';
  next.onclick = () => {
    if (currentPage < totalPages) {
      currentPage++;
      applyFilters();
      updateTotalCountAndPagination();
    }
  };
  container.appendChild(next);
}

async function addUser(formId, role = 'participant') {
  const form = document.getElementById(formId)
  const formData = new FormData(form)

  const data = {
    email: formData.get('email'),
    password: form.querySelector('#password')?.value || '',
    full_name_ru: formData.get('fullname'),
    country: getCountryCode(formData.get('country')) || formData.get('country'),
    city: formData.get('city') || '',
    school: formData.get('school') || '',
    grade: formData.get('class') || '',
    parent_name_ru: formData.get('parent_name') || '',
    parent_phone_number: formData.get('parent_phone') || '',
    teacher_name_ru: formData.get('teacher_name') || '',
    teacher_phone_number: formData.get('teacher_phone') || '',
    phone_number: formData.get('phone_number') || '',
    role: role,
  }

  try {
    const token = localStorage.getItem('access_token')
    if (!token) {
      throw new Error('–¢–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ localStorage')
    }

    const response = await fetch(
      'https://portal.gradients.academy/api/users/dashboard/',
      {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          Authorization: `Bearer ${token}`,
        },
        body: JSON.stringify(data),
      }
    )

    const responseBody = await response.json()

    if (!response.ok) {
      throw new Error(responseBody.detail || JSON.stringify(responseBody))
    }

    alert('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!')
    form.reset()

    // –°–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª–∫—É
    const modal = document.getElementById('modalAdd')
    if (modal) {
      modal.classList.add('hidden')
      modal.style.pointerEvents = 'auto'
    }

    // –°–∫—Ä—ã–≤–∞–µ–º –æ–≤–µ—Ä–ª–µ–π, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
    const overlay =
      document.querySelector('.overlay') ||
      document.querySelector('.modal-overlay')
    document.querySelector('.modal-backdrop')
    if (overlay) {
      overlay.classList.add('hidden')
      overlay.style.pointerEvents = 'none'
    }

    // –°–Ω–∏–º–∞–µ–º –±–ª–æ–∫–∏—Ä–æ–≤–∫—É —Å–∫—Ä–æ–ª–ª–∞ –∏ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å body
    document.body.classList.remove('modal-open', 'no-scroll', 'overflow-hidden')
    document.body.style.overflow = ''
    document.body.style.pointerEvents = 'auto'
  } catch (error) {
    alert(`–û—à–∏–±–∫–∞: ${error.message}`)
  }
}

document.addEventListener('DOMContentLoaded', () => {
  document
    .getElementById('participant-form')
    .addEventListener('submit', (e) => {
      e.preventDefault()
      addUser('participant-form', 'participant')
    })

  document
    .getElementById('representative-form')
    .addEventListener('submit', (e) => {
      e.preventDefault()
      addUser('representative-form', 'representative')
    })
})

async function deleteUser(userId) {
  const token = localStorage.getItem('access_token')
  if (!token) {
    alert('–¢–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ–π–¥–∏—Ç–µ –∑–∞–Ω–æ–≤–æ.')
    return
  }

  try {
    const response = await fetch(
      `https://portal.gradients.academy/api/users/dashboard/${userId}/`,
      {
        method: 'DELETE',
        headers: {
          Authorization: `Bearer ${token}`,
        },
      }
    )

    if (!response.ok) {
      throw new Error(`–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è: ${response.statusText}`)
    }

    alert('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω')
    await loadAllUsers() // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ —Å–ø–∏—Å–∫–∞
  } catch (err) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', err)
    alert('–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
  }
}

let userIdToDelete = null

function handleDeleteConfirmed() {
  if (userIdToDelete !== null) {
    deleteUser(userIdToDelete)
    userIdToDelete = null

    // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    toggleModal('modalDel', false)
  }
}

function confirmDeleteUser(id, fullName = null) {
  userIdToDelete = id

  const nameEl = document.getElementById('delete-user-name')

  if (nameEl) {
    if (fullName) {
      nameEl.textContent = fullName
    } else {
      const user = allUsers.find((u) => u.id === id)
      nameEl.textContent = user ? user.full_name_ru : ''
    }
  }

  toggleModal('modalDel', true)
}

function confirmDeleteUserFromEdit() {
  const modal = document.getElementById('modalEdit')
  const form = modal.querySelector('form:not(.hidden)')
  const fullName = form.querySelector('input[name="fullname"]').value
  const emailInput = form.querySelector('input[name="email"]')
  const userId = emailInput?.dataset.userId

  if (!userId) {
    alert('ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ –Ω–∞–π–¥–µ–Ω')
    return
  }

  confirmDeleteUser(parseInt(userId), fullName)
}

async function updateUserFromEditForm() {
  const modal = document.getElementById('modalEdit')
  const form = modal.querySelector('form:not(.hidden)')
  if (!form) {
    alert('–§–æ—Ä–º–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞')
    return
  }

  const emailInput = form.querySelector('input[name="email"]')
  const userId = emailInput?.dataset.userId
  if (!userId) {
    alert('ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ –Ω–∞–π–¥–µ–Ω')
    return
  }

  const token = localStorage.getItem('access_token')
  if (!token) {
    alert('–¢–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ–π–¥–∏—Ç–µ –∑–∞–Ω–æ–≤–æ.')
    return
  }

  const isParticipant = form.id === 'participant-form-edit'
  const countryName = form.querySelector('input[name="country"]').value;
  data = {
    email: emailInput.value,
    password: form.querySelector('#password')?.value || '',
    full_name_ru: form.querySelector('input[name="fullname"]').value,
    country: getCountryCode(countryName) || countryName,
  }

  if (isParticipant) {
    data.city = form.querySelector('input[name="city"]').value
    data.school = form.querySelector('input[name="school"]').value
    data.grade = form.querySelector('input[name="class"]').value
    data.parent_name_ru = form.querySelector('input[name="parent_name"]').value
    data.parent_phone_number = form.querySelector(
      'input[name="parent_phone"]'
    ).value
    data.teacher_name_ru = form.querySelector(
      'input[name="teacher_name"]'
    ).value
    data.teacher_phone_number = form.querySelector(
      'input[name="teacher_phone"]'
    ).value
  }

  try {
    const response = await fetch(
      `https://portal.gradients.academy/api/users/dashboard/${userId}/`,
      {
        method: 'PUT',
        headers: {
          'Content-Type': 'application/json',
          Authorization: `Bearer ${token}`,
        },
        body: JSON.stringify(data),
      }
    )

    const responseBody = await response.json()
    if (!response.ok) {
      throw new Error(responseBody.detail || JSON.stringify(responseBody))
    }

    alert('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª—ë–Ω!')
    toggleModal('modalEdit', false)
    await loadAllUsers()
  } catch (error) {
    alert(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏: ${error.message}`)
  }
}

function openEditModal(userId) {
  const user = allUsers.find((u) => u.id === userId)
  if (!user) {
    alert('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω')
    return
  }

  const role = user.role === 'representative' ? 'representative' : 'participant'

  // –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å —Ä–æ–ª–∏
  const roleRadio = document.querySelector(
    `#modalEdit input[name="role"][value="${role}"]`
  )
  if (roleRadio) roleRadio.checked = true

  // –ü–æ–∫–∞–∑–∞—Ç—å –Ω—É–∂–Ω—É—é —Ñ–æ—Ä–º—É
  document.querySelectorAll('#modalEdit .role-form').forEach((form) => {
    form.classList.add('hidden')
  })
  const activeForm = document.getElementById(`${role}-form-edit`)
  activeForm.classList.remove('hidden')

  // –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏—è –≤ —Ñ–æ—Ä–º—É
  const email = activeForm.querySelector('input[name="email"]')
  if (email) {
    email.value = user.email
    email.setAttribute('data-user-id', user.id)
  }

  const fullName = activeForm.querySelector('input[name="fullname"]')
  if (fullName) fullName.value = user.full_name_ru

  const country = activeForm.querySelector('input[name="country"]')
  if (country) country.value = user.country

  if (role === 'participant') {
    activeForm.querySelector('input[name="city"]').value = user.city || ''
    activeForm.querySelector('input[name="school"]').value = user.school || ''
    activeForm.querySelector('input[name="class"]').value = user.grade || ''
    activeForm.querySelector('input[name="parent_name"]').value =
      user.parent_name_ru || ''
    activeForm.querySelector('input[name="parent_phone"]').value =
      user.parent_phone_number || ''
    activeForm.querySelector('input[name="teacher_name"]').value =
      user.teacher_name_ru || ''
    activeForm.querySelector('input[name="teacher_phone"]').value =
      user.teacher_phone_number || ''
  }

  toggleModal('modalEdit', true)
}

let countryList = []

const classMap = {
  1: 'first',
  2: 'second',
  3: 'third',
  4: 'fourth',
  5: 'fifth',
  6: 'sixth',
  7: 'seventh',
  8: 'eighth',
  9: 'ninth',
  10: 'tenth',
  11: 'eleventh',
  12: 'twelfth',
}

async function populateCountryAndClassOptions() {
  try {
    // –ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç—Ä–∞–Ω
    const res = await fetch(
      'https://portal.gradients.academy/api/common/countries/?page=1&page_size=500'
    )
    const data = await res.json()
    const countries = data.results
    countryList = data.results

    const countryInputs = document.querySelectorAll('input[name="country"]')
    countryInputs.forEach((input) => {
      const datalistId = input.id + '-list'
      input.setAttribute('list', datalistId)

      let datalist = document.getElementById(datalistId)
      if (!datalist) {
        datalist = document.createElement('datalist')
        datalist.id = datalistId
        document.body.appendChild(datalist)
      }

      datalist.innerHTML = countries
        .map((c) => `<option value="${c.name}" data-code="${c.code}"></option>`)
        .join('')

      // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —Å—Ç—Ä–∞–Ω—ã
      input.addEventListener('change', () => {
        const selected = countries.find((c) => c.name === input.value)
        if (selected) {
          input.value = selected.code
        }
      })
    })

    // –ö–ª–∞—Å—Å—ã

    const classInputs = document.querySelectorAll('input[name="class"]')
    classInputs.forEach((input) => {
      const datalistId = input.id + '-list'
      input.setAttribute('list', datalistId)

      let datalist = document.getElementById(datalistId)
      if (!datalist) {
        datalist = document.createElement('datalist')
        datalist.id = datalistId
        document.body.appendChild(datalist)
      }

      datalist.innerHTML = Object.keys(classMap)
        .map((num) => `<option value="${num}"></option>`)
        .join('')

      // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –∫–ª–∞—Å—Å–∞
      input.addEventListener('change', () => {
        const selected = classMap[input.value]
        if (selected) {
          input.value = selected
        }
      })
    })
  } catch (err) {
    console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω –∏–ª–∏ –∫–ª–∞—Å—Å–æ–≤:', err)
  }
}
