async function ensureUserAuthenticated() {
  let userData = localStorage.getItem('user')

  if (!userData) {
    console.warn(
      'user –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ localStorage. –ü—Ä–æ–±—É–µ–º –æ–±–Ω–æ–≤–∏—Ç—å access_token...'
    )
    const newAccessToken = await refreshAccessToken()
    console.log('–†–µ–∑—É–ª—å—Ç–∞—Ç refreshAccessToken:', newAccessToken)

    if (!newAccessToken) {
      console.warn(
        'refreshAccessToken –≤–µ—Ä–Ω—É–ª null. –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ /login.html'
      )
      window.location.href = '/index.html'
      return null
    }

    userData = localStorage.getItem('user')
    if (!userData) {
      console.warn('user –≤—Å—ë –µ—â—ë –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞. –†–µ–¥–∏—Ä–µ–∫—Ç.')
      window.location.href = '/index.html'
      return null
    }
  }

  const user = JSON.parse(userData)

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–æ–ª—å
  const role = user.profile?.role
  if (role !== 'administrator') {
    console.warn(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ä–æ–ª—å—é "${role}" –Ω–µ –∏–º–µ–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –∞–¥–º–∏–Ω–∫–µ. –†–µ–¥–∏—Ä–µ–∫—Ç.`)
    window.location.href = '/index.html'
    return null
  }

  return user
}

// –û—Å–Ω–æ–≤–Ω–∞—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è
function renderUserInfo(profile) {
  const avatarEl  = document.getElementById('user-avatar');
  const nameEl    = document.getElementById('user-name');
  const roleEl    = document.getElementById('user-role');
  const welcomeEl = document.querySelector('h1.text-xl');

  const imgPath = profile.image || '';
  avatarEl.src = imgPath.startsWith('http')
    ? imgPath
    : `https://portal.gradients.academy${imgPath}`;

  nameEl.textContent    = profile.full_name_ru || '';
  const firstName       = (profile.full_name_ru || '').split(' ')[0];
  welcomeEl.textContent = `–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, ${firstName} üëã`;

  const roleMap = { administrator: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä' };
  roleEl.textContent = roleMap[profile.role] || profile.role;
}

async function loadDashboardSummary() {
  const res = await authorizedFetch(
    'https://portal.gradients.academy/api/results/dashboard/summary/'
  )
  if (!res.ok) throw new Error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö')

  const summary = await res.json()

  document.getElementById('registered-count').textContent =
    summary.registered_count
  document.getElementById('active-olympiads').textContent =
    summary.active_olympiads
  document.getElementById('average-score').textContent = summary.average_score
  document.getElementById('total-tasks').textContent = summary.total_tasks

  console.log('–î–∞–Ω–Ω—ã–µ –¥–∞—à–±–æ—Ä–¥–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã:', summary)
}

async function loadCurrentOlympiad() {
  const block = document.querySelector('.olympiad-block')
  if (!block) return

  try {
    const res = await authorizedFetch(
      'https://portal.gradients.academy/api/results/dashboard/current/'
    )
    const detailsBtn = block.querySelector('a.btn-base')

    if (!res.ok) {
      const errorData = await res.json()
      if (errorData.detail === 'No active Olympiad.') {
        console.warn('–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –æ–ª–∏–º–ø–∏–∞–¥—ã ‚Äî –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º –∑–∞–≥–ª—É—à–∫—É.')

        block.querySelector('p.font-bold').textContent = '–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –æ–ª–∏–º–ø–∏–∞–¥—ã'
        block.querySelector('p.text-sm').textContent = '–û–∂–∏–¥–∞–µ—Ç—Å—è –∑–∞–ø—É—Å–∫'
        block.querySelectorAll('.date').forEach(el => el.textContent = '‚Äî')
        block.querySelectorAll('.date').forEach(dateEl => {
          const titleSpan = dateEl.previousElementSibling?.querySelector('span.font-bold')
          if (titleSpan) titleSpan.textContent = '–≠—Ç–∞–ø'
        })

        // –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: –æ—Ç–∫–ª—é—á–∏—Ç—å –∫–Ω–æ–ø–∫—É
        if (detailsBtn) {
          detailsBtn.removeAttribute('href')
          detailsBtn.classList.add('opacity-50', 'pointer-events-none')
        }
        return
      }
      throw new Error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ç–µ–∫—É—â–µ–π –æ–ª–∏–º–ø–∏–∞–¥—ã')
    }

    // --- –£–°–ü–ï–®–ù–´–ô –æ—Ç–≤–µ—Ç ---
    const olympiad = await res.json()
    console.log('–¢–µ–∫—É—â–∞—è –æ–ª–∏–º–ø–∏–∞–¥–∞:', olympiad)

    block.querySelector('p.font-bold').textContent = olympiad.title
    block.querySelector('p.text-sm').textContent = olympiad.description
    block.querySelectorAll('.date').forEach((el, i) => {
      const stage = olympiad.stages[i]
      if (stage) {
        el.textContent = `${stage.start} - ${stage.end}`
        const titleEl = el.previousElementSibling
        if (titleEl?.classList.contains('flex')) {
          titleEl.querySelector('span.font-bold').textContent = stage.name
        }
      }
    })

    // –°—Ç–∞–≤–∏–º —Å—Å—ã–ª–∫—É –Ω–∞ —Å–∞–π—Ç –æ–ª–∏–º–ø–∏–∞–¥—ã
    if (detailsBtn && olympiad.website) {
      console.log('–°–∞–π—Ç –æ–ª–∏–º–ø–∏–∞–¥—ã:', olympiad.website)
      detailsBtn.href = olympiad.website
      detailsBtn.target = '_blank'
    } else {
      console.warn('–ö–Ω–æ–ø–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –∏–ª–∏ –Ω–µ—Ç –ø–æ–ª—è website –≤ –æ—Ç–≤–µ—Ç–µ')
    }

  } catch (err) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ç–µ–∫—É—â–µ–π –æ–ª–∏–º–ø–∏–∞–¥—ã:', err)
    // –æ–±—â–∏–π —Ñ–æ–ª–ª–±—ç–∫
    block.querySelector('p.font-bold').textContent = '–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –æ–ª–∏–º–ø–∏–∞–¥—ã'
    block.querySelector('p.text-sm').textContent = '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö'
    block.querySelectorAll('.date').forEach(el => el.textContent = '‚Äî')
  }
}

async function loadCurrentOlympiadStats() {
  try {
    const res = await authorizedFetch(
      'https://portal.gradients.academy/api/results/dashboard/current_stats/'
    )
    if (!res.ok) {
      const { detail } = await res.json()
      if (detail === 'No active Olympiad.') {
        console.warn('–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –æ–ª–∏–º–ø–∏–∞–¥—ã ‚Äî —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –Ω–µ –±—É–¥–µ—Ç –∑–∞–≥—Ä—É–∂–µ–Ω–∞.')
        return
      }
      throw new Error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ç–µ–∫—É—â–µ–π –æ–ª–∏–º–ø–∏–∞–¥—ã')
    }

    const stats = await res.json()
    console.log('–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ç–µ–∫—É—â–µ–π –æ–ª–∏–º–ø–∏–∞–¥—ã:', stats)

    document.getElementById('participants-count').textContent = stats.participants_count ?? 0
    document.getElementById('paid-count').      textContent = stats.paid_count        ?? 0
    document.getElementById('new-today').        textContent = `+ ${stats.new_today ?? 0}`

    // –º–∞–ª–µ–Ω—å–∫–∏–µ —Ñ–ª–∞–∂–∫–∏
    const FLAG_WIDTH  = 16
    const FLAG_HEIGHT = 12
    function countryFlagImgTag(cc) {
      const code = cc.toLowerCase()
      return `<img
        src="https://flagcdn.com/${FLAG_WIDTH}x${FLAG_HEIGHT}/${code}.png"
        alt="${cc} flag"
        width="${FLAG_WIDTH}"
        height="${FLAG_HEIGHT}"
        class="inline-block"
      />`
    }

    const countriesListEl = document.getElementById('countries-list')
    if (Array.isArray(stats.countries) && stats.countries.length) {
      countriesListEl.innerHTML = stats.countries.map(countryFlagImgTag).join('')
    } else {
      countriesListEl.textContent = '‚Äî'
    }

  } catch (err) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –æ–ª–∏–º–ø–∏–∞–¥—ã:', err)
  }
}



async function loadParticipantsTrend() {
  try {
    const res = await authorizedFetch(
      'https://portal.gradients.academy/api/results/dashboard/trend/'
    )
    if (!res.ok)
      throw new Error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö —Ç—Ä–µ–Ω–¥–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤')

    const trendData = await res.json()
    console.log('–î–∞–Ω–Ω—ã–µ —Ç—Ä–µ–Ω–¥–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤:', trendData)

    // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≥—Ä–∞—Ñ–∏–∫–∞
    const labels = trendData.map((item) => String(item.year))
    const counts = trendData.map((item) => item.count)

    console.log('labels:', labels)
    console.log('counts:', counts)


    // –û–±–Ω–æ–≤–ª—è–µ–º –≥—Ä–∞—Ñ–∏–∫
    const ctx = document.getElementById('participantsChart').getContext('2d')

    // –ï—Å–ª–∏ –≥—Ä–∞—Ñ–∏–∫ —É–∂–µ —Å–æ–∑–¥–∞–Ω, –æ–±–Ω–æ–≤–∏–º –µ–≥–æ –¥–∞–Ω–Ω—ã–µ, –∏–Ω–∞—á–µ —Å–æ–∑–¥–∞–¥–∏–º –Ω–æ–≤—ã–π
    if (window.participantsChartInstance) {
      window.participantsChartInstance.data.labels = labels
      window.participantsChartInstance.data.datasets[0].data = counts
      window.participantsChartInstance.update()
    } else {
      window.participantsChartInstance = new Chart(ctx, {
        type: 'line',
        data: {
          labels: labels,
          datasets: [
            {
              data: counts,
              borderColor: '#10b981',
              backgroundColor: 'rgba(16, 185, 129, 0.08)',
              borderWidth: 1,
              pointRadius: 3,
              pointHoverRadius: 10,
              pointBackgroundColor: '#fff',
              tension: 0.6,
              fill: true,
              borderCapStyle: 'round',
              borderJoinStyle: 'round',
              pointStyle: 'circle',
            },
          ],
        },
        options: {
          responsive: true,
          maintainAspectRatio: false,
          scales: {
            y: {
              beginAtZero: true,
              suggestedMax: Math.max(...counts) + 10,
              ticks: {
                callback: (value) => (value === 0 ? 0 : value + ' —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤'),
                stepSize: 20,
              },
              precision: 0,
              autoSkip: false,
            },
            x: {
              grid: { display: false },
              ticks: { autoSkip: false },
            },
          },
          plugins: {
            legend: { display: false },
            tooltip: { mode: 'index', intersect: false },
          },
        },
      })
    }
  } catch (err) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ç—Ä–µ–Ω–¥–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤:', err)
  }
}

// –§—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –¥–µ—Ä–≥–∞–µ—Ç –ø—Ä–æ—Ñ–∏–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
async function loadAdminProfile() {
  const token = localStorage.getItem('access_token');
  if (!token) throw new Error('–¢–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω');

  const res = await authorizedFetch(
    'https://portal.gradients.academy/api/users/administrator/profile/',
    { headers: { Authorization: `Bearer ${token}` } }
  );
  if (!res.ok) throw new Error(`–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è: ${res.status}`);
  return await res.json();
}

document.addEventListener('DOMContentLoaded', async () => {
  const user = await ensureUserAuthenticated()
  if (!user) return

  try {
    // 2) –ü–æ–¥—Ç—è–≥–∏–≤–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å –ø–æ API
    const profileData = await loadAdminProfile();
    // 3) –†–∏—Å—É–µ–º —à–∞–ø–∫—É
    renderUserInfo(profileData);
    await loadDashboardSummary()
    await loadCurrentOlympiad()
    await loadCurrentOlympiadStats()
    await loadParticipantsTrend()
  } catch (err) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö:', err)
  }
})


