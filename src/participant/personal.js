async function ensureUserAuthenticated() {
  let userData = localStorage.getItem('user')

  if (!userData) {
    console.warn(
      'user –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ localStorage. –ü—Ä–æ–±—É–µ–º –æ–±–Ω–æ–≤–∏—Ç—å access_token...'
    )
    const newAccessToken = await refreshAccessToken()
    console.log('–†–µ–∑—É–ª—å—Ç–∞—Ç refreshAccessToken:', newAccessToken)

    if (!newAccessToken) {
      console.warn(
        'refreshAccessToken –≤–µ—Ä–Ω—É–ª null. –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ /login.html'
      )
      window.location.href = '/index.html'
      return null
    }

    userData = localStorage.getItem('user')
    if (!userData) {
      console.warn('user –≤—Å—ë –µ—â—ë –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞. –†–µ–¥–∏—Ä–µ–∫—Ç.')
      window.location.href = '/index.html'
      return null
    }
  }

  const user = JSON.parse(userData)

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–æ–ª—å
  const role = user.profile?.role
  if (role !== 'participant') {
    console.warn(
      `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ä–æ–ª—å—é "${role}" –Ω–µ –∏–º–µ–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —É—á–∞—Å—Ç–Ω–∏–∫–∞–º. –†–µ–¥–∏—Ä–µ–∫—Ç.`
    )
    window.location.href = '/index.html'
    return null
  }

  return user
}

// 1) –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ–ª–Ω–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è —É—á–∞—Å—Ç–Ω–∏–∫–∞
async function loadUserProfile() {
  const res = await authorizedFetch(
    'https://portal.femo.kz/api/users/participant/profile/'
  );
  if (!res.ok) throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å');
  return await res.json();
}

function renderUserInfo(profile) {
  const avatarEl   = document.getElementById('user-avatar');
  const nameEl     = document.getElementById('user-name');
  const roleEl     = document.getElementById('user-role');
  const welcomeEl  = document.querySelector('h1.text-xl');

  // –ë–µ–∑–æ–ø–∞—Å–Ω—ã–π –ø—É—Ç—å –∫ –∫–∞—Ä—Ç–∏–Ω–∫–µ: –µ—Å–ª–∏ –Ω–µ—Ç ‚Äî –∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–∞–≥–ª—É—à–∫—É
  const imgPath = profile && profile.image ? profile.image : null;
  if (imgPath && typeof imgPath === 'string') {
    avatarEl.src = imgPath.startsWith('http')
      ? imgPath
      : `https://portal.femo.kz${imgPath}`;
  } else {
    // –≤—Å—Ç–∞–≤—å —Ç—É—Ç —Å–≤–æ–π –ø—É—Ç—å –∫ –¥–µ—Ñ–æ–ª—Ç–Ω–æ–π –∞–≤–∞—Ç–∞—Ä–∫–µ –∏–ª–∏ –ø—É—Å—Ç—É—é –∫–∞—Ä—Ç–∏–Ω–∫—É
    avatarEl.src = '/src/assets/images/default-avatar.png'; // <- –ø–æ–º–µ–Ω—è–π –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
  }

  // –ò–º—è (–±–µ—Ä—ë–º –±–µ–∑–æ–ø–∞—Å–Ω–æ: —Ä—É—Å—Å–∫–æ–µ, –∞–Ω–≥–ª–∏–π—Å–∫–æ–µ, –ª–∏–±–æ fallback)
  const fullNameRu = (profile && (profile.full_name_ru || profile.full_name_en || profile.full_name)) || '';
  nameEl.textContent = fullNameRu || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å';

  // –±–µ–∑–æ–ø–∞—Å–Ω–æ –æ—Ç–¥–µ–ª—è–µ–º firstName
  const firstName = fullNameRu ? fullNameRu.split(' ')[0] : '–ü—Ä–∏–≤–µ—Ç';
  welcomeEl.textContent = `–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, ${firstName} üëã`;

  // –†–æ–ª—å
  roleEl.textContent = '–£—á–∞—Å—Ç–Ω–∏–∫';
}


document.addEventListener('DOMContentLoaded', async () => {
  const user = await ensureUserAuthenticated()
  if (!user) return

  // —Å–Ω–∞—á–∞–ª–∞ –∑–∞–≥—Ä—É–∑–∏–º –¥–µ—Ç–∞–ª–∏ –ø—Ä–æ—Ñ–∏–ª—è
  let profile
  try {
    profile = await loadUserProfile()
  } catch (e) {
    console.error(e)
    return
  }
  renderUserInfo(profile)

  // –æ—Å—Ç–∞–ª—å–Ω–æ–π –∫–æ–¥...
})

document.addEventListener('DOMContentLoaded', async () => {
  const token = localStorage.getItem('access_token')
  if (!token) {
    alert('–¢–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ–π–¥–∏—Ç–µ –∑–∞–Ω–æ–≤–æ.')
    return
  }

  try {
    const response = await authorizedFetch('https://portal.femo.kz/api/users/participant/profile/', {
      headers: {
        Authorization: `Bearer ${token}`,
      },
    })

    if (!response.ok) throw new Error('–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –ø—Ä–æ—Ñ–∏–ª—è')

    const data = await response.json()
    fillProfileData(data)

    // –ù–∞–∑–Ω–∞—á–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    const editBtn = document.getElementById('edit-button')
    const cancelBtn = document.getElementById('cancel-button')
    const submitBtn = document.getElementById('submit-button')

    if (editBtn) {
      editBtn.addEventListener('click', () => {

        console.log('–ö–Ω–æ–ø–∫–∞ –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –Ω–∞–∂–∞—Ç–∞');

        toggleEditMode(true)
      })
    }

    if (cancelBtn) {
      cancelBtn.addEventListener('click', () => {
        toggleEditMode(false)
      })
    }

    // –û–¥–∏–Ω —Ä–∞–∑ ‚Äî –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –≤—Å—ë –∏ —Å–∫—Ä—ã—Ç—å –∫–Ω–æ–ø–∫–∏
    toggleEditMode(false)

  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è:', error)
  }
})

function fillProfileData(data) {
  document.querySelector('input[name="id"]').value = data.id || ''
  document.querySelector('input[name="email"]').value = data.email || ''
  document.querySelector('input[name="fullname_ru"]').value = data.full_name_ru || ''
  document.querySelector('input[name="fullname_en"]').value = data.full_name_en || ''
  document.querySelector('input[name="country"]').value = data.country?.name || ''
  document.querySelector('input[name="city"]').value = data.city || ''
  document.querySelector('input[name="school"]').value = data.school || ''
  document.querySelector('input[name="class"]').value = convertGrade(data.grade) || ''

  document.querySelector('input[name="parent_name"]').value = data.parent?.name_ru || ''
  document.querySelector('input[name="parent_name_en"]').value = data.parent?.name_en || ''
  document.querySelector('input[name="parent_phone"]').value = data.parent?.phone_number || ''

  document.querySelector('input[name="teacher_name"]').value = data.teacher?.name_ru || ''
  document.querySelector('input[name="teacher_name_en"]').value = data.teacher?.name_en || ''
  document.querySelector('input[name="teacher_phone"]').value = data.teacher?.phone_number || ''

  const img = document.getElementById('imagePreview')
  if (img && data.image) {
    img.src = data.image
    img.classList.remove('bg-gray-50')
    const fileNameEl = document.getElementById('fileName')
    if (fileNameEl) fileNameEl.textContent = getFileNameFromUrl(data.image)
  }

  // ID —É—á–∞—Å—Ç–Ω–∏–∫–∞ ‚Äî —Ç–æ–ª—å–∫–æ –¥–ª—è —á—Ç–µ–Ω–∏—è
  const idInput = document.querySelector('input[name="id"]')
  if (idInput) {
    idInput.readOnly = true
    idInput.disabled = true
  }
}

function toggleEditMode(enable = true) {
  setFormDisabled(!enable)

  const cancelBtn = document.getElementById('cancel-button')
  const submitBtn = document.getElementById('submit-button')
  const editBtn = document.getElementById('edit-button')

  if (cancelBtn) cancelBtn.style.display = enable ? 'inline-flex' : 'none'
  if (submitBtn) submitBtn.style.display = enable ? 'inline-flex' : 'none'
  if (editBtn) editBtn.style.display = enable ? 'none' : 'inline-flex'
}




function setFormDisabled(state = true) {
  const form = document.querySelector('form')
  const inputs = form.querySelectorAll('input, select, textarea')

  inputs.forEach((el) => {
    if (el.name !== 'id') {
      el.disabled = state
    }
  })
}


function convertGrade(grade) {
  const map = {
    first: '1',
    second: '2',
    third: '3',
    fourth: '4',
    fifth: '5',
    sixth: '6',
    seventh: '7',
    eighth: '8',
    ninth: '9',
    tenth: '10',
    eleventh: '11',
  }
  return map[grade?.toLowerCase()] || ''
}

function getFileNameFromUrl(url) {
  return url.split('/').pop()
}
